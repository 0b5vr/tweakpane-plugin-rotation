import { Value, View } from '@tweakpane/core';
import { Quaternion } from './Quaternion';
import { RotationInputGizmoViewConfig } from './RotationInputGizmoViewConfig';
export declare class RotationInputGizmoView implements View {
    readonly element: HTMLElement;
    readonly padElement: HTMLDivElement;
    readonly value: Value<Quaternion>;
    readonly xLabel: SVGGElement;
    readonly yLabel: SVGGElement;
    readonly zLabel: SVGGElement;
    readonly xnLabel: SVGGElement;
    readonly ynLabel: SVGGElement;
    readonly znLabel: SVGGElement;
    private readonly mode_;
    private readonly svgElem_;
    private readonly axesElem_;
    private readonly labelsElem_;
    private readonly projector_;
    private readonly xAxis_;
    private readonly yAxis_;
    private readonly zAxis_;
    private readonly xnAxis_;
    private readonly ynAxis_;
    private readonly znAxis_;
    private readonly xArcB_;
    private readonly yArcB_;
    private readonly zArcB_;
    private readonly xArcBC_;
    private readonly yArcBC_;
    private readonly zArcBC_;
    private readonly xArcF_;
    private readonly yArcF_;
    private readonly zArcF_;
    private readonly xArcFC_;
    private readonly yArcFC_;
    private readonly zArcFC_;
    private readonly rArc_;
    private readonly rArcC_;
    readonly xArcBElement: SVGPathElement;
    readonly yArcBElement: SVGPathElement;
    readonly zArcBElement: SVGPathElement;
    readonly xArcFElement: SVGPathElement;
    readonly yArcFElement: SVGPathElement;
    readonly zArcFElement: SVGPathElement;
    readonly rArcElement: SVGPathElement;
    constructor(doc: Document, config: RotationInputGizmoViewConfig);
    readonly allFocusableElements: HTMLElement[];
    private update_;
    private onValueChange_;
    private onFoldableChange_;
    private onModeChange_;
}
